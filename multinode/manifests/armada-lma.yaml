---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: helm-toolkit
data:
  chart_name: helm-toolkit
  release: helm-toolkit
  namespace: helm-toolkit
  values: {}
  source:
    type: local
    location: ${OSH_INFRA_PATH}
    subpath: helm-toolkit
    reference: master
  dependencies: []
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-ingress-controller
data:
  chart_name: osh-infra-ingress-controller
  release: osh-infra-ingress-controller
  namespace: osh-infra
  wait:
    timeout: 1800
    labels:
      release_group: osh-infra-osh-infra-ingress-controller
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-osh-infra-ingress-controller
  values:
    labels:
      node_selector_key: openstack-control-plane
      node_selector_value: enabled
    pod:
      replicas:
        error_page: 2
        ingress: 2
  source:
    type: local
    location: ${OSH_PATH}
    subpath: ingress
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-ceph-config
data:
  chart_name: osh-infra-ceph-config
  release: osh-infra-ceph-config
  namespace: osh-infra
  wait:
    timeout: 1800
    labels:
      release_group: osh-infra-osh-infra-ceph-config
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-osh-infra-ceph-config
  values:
    endpoints:
      identity:
        namespace: openstack
      object_store:
        namespace: ceph
      ceph_mon:
        namespace: ceph
    labels:
      jobs:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
    network:
      public: ${CEPH_NETWORK}
      cluster: ${CEPH_NETWORK}
    deployment:
      storage_secrets: False
      ceph: False
      rbd_provisioner: False
      cephfs_provisioner: False
      client_secrets: True
      rgw_keystone_user_and_endpoints: False
    bootstrap:
      enabled: False
    conf:
      rgw_ks:
        enabled: True
  source:
    type: local
    location: ${OSH_PATH}
    subpath: ceph-provisioners
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-ldap
data:
  chart_name: osh-infra-ldap
  release: osh-infra-ldap
  namespace: osh-infra
  wait:
    timeout: 1800
    labels:
      release_group: osh-infra-osh-infra-ldap
  install:
    no_hooks: false
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-osh-infra-ldap
  values:
    data:
      sample: |
        dn: ou=People,dc=cluster,dc=local
        objectclass: organizationalunit
        ou: People
        description: We the People
        dn: uid=alice,ou=People,dc=cluster,dc=local
        objectClass: inetOrgPerson
        objectClass: top
        objectClass: posixAccount
        objectClass: shadowAccount
        objectClass: person
        sn: Alice
        cn: alice
        uid: alice
        userPassword: {SSHA}+i3t/DLCgLDGaIOAmfeFJ2kDeJWmPUDH
        description: SHA
        gidNumber: 1000
        uidNumber: 1493
        homeDirectory: /home/alice
        mail: alice@example.com
        # NOTE: Password is "password" without quotes
        dn: uid=bob,ou=People,dc=cluster,dc=local
        objectClass: inetOrgPerson
        objectClass: top
        objectClass: posixAccount
        objectClass: shadowAccount
        objectClass: person
        sn: Bob
        cn: bob
        uid: bob
        userPassword: {SSHA}fCJ5vuW1BQ4/OfOVkkx1qjwi7yHFuGNB
        description: MD5
        gidNumber: 1000
        uidNumber: 5689
        homeDirectory: /home/bob
        mail: bob@example.com
        dn: ou=Groups,dc=cluster,dc=local
        objectclass: organizationalunit
        ou: Groups
        description: We the People
        dn: cn=cryptography,ou=Groups,dc=cluster,dc=local
        objectclass: top
        objectclass: posixGroup
        gidNumber: 418
        cn: overwatch
        description: Cryptography Team
        memberUID: uid=alice,ou=People,dc=cluster,dc=local
        memberUID: uid=bob,ou=People,dc=cluster,dc=local
        dn: cn=blue,ou=Groups,dc=cluster,dc=local
        objectclass: top
        objectclass: posixGroup
        gidNumber: 419
        cn: blue
        description: Blue Team
        memberUID: uid=bob,ou=People,dc=cluster,dc=local
        dn: cn=red,ou=Groups,dc=cluster,dc=local
        objectclass: top
        objectclass: posixGroup
        gidNumber: 420
        cn: red
        description: Red Team
        memberUID: uid=alice,ou=People,dc=cluster,dc=local
    labels:
      server:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
    bootstrap:
      enabled: true
  source:
    type: local
    location: ${OSH_INFRA_PATH}
    subpath: ldap
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-mariadb
data:
  chart_name: osh-infra-mariadb
  release: osh-infra-mariadb
  namespace: osh-infra
  wait:
    timeout: 1800
    labels:
      release_group: osh-infra-osh-infra-mariadb
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-osh-infra-mariadb
  values:
    pod:
      replicas:
        server: 1
    labels:
      server:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      prometheus_mysql_exporter:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
  source:
    type: local
    location: ${OSH_PATH}
    subpath: mariadb
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: elasticsearch
data:
  chart_name: elasticsearch
  release: elasticsearch
  namespace: osh-infra
  wait:
    timeout: 3600
    labels:
      release_group: osh-infra-elasticsearch
  test:
    enabled: true
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-elasticsearch
        - type: pod
          labels:
            release_group: osh-infra-elasticsearch
            component: test
  values:
    pod:
      replicas:
        data: 3
        client: 3
    monitoring:
      prometheus:
        enabled: True
    storage:
      elasticsearch:
        requests:
          storage: 10Gi
    conf:
      elasticsearch:
        env:
          java_opts: "-Xms4g -Xmx4g"
    labels:
      elasticsearch:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
  source:
    type: local
    location: ${OSH_INFRA_PATH}
    subpath: elasticsearch
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: fluent-logging
data:
  chart_name: fluent-logging
  release: fluent-logging
  namespace: osh-infra
  wait:
    timeout: 3600
    labels:
      release_group: osh-infra-fluent-logging
  test:
    enabled: true
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-fluent-logging
        - type: pod
          labels:
            release_group: osh-infra-fluent-logging
            component: test
  values:
    conf:
      templates:
        oslo_openstack_fluentd:
          template: "openstack-*"
          index_patterns: "openstack-*"
          settings:
            number_of_shards: 1
          mappings:
            oslo_openstack_fluentd:
              properties:
                extra:
                  properties:
                    project:
                      type: text
                      norms: false
                    version:
                      type: text
                      norms: false
                filename:
                  type: text
                  norms: false
                funcname:
                  type: text
                  norms: false
                message:
                  type: text
                  norms: false
                process_name:
                  type: keyword
                  index: false
        docker_fluentd:
          template: "logstash-*"
          index_patterns: "logstash-*"
          settings:
            number_of_shards: 1
          mappings:
            docker_fluentd:
              properties:
                kubernetes:
                  properties:
                    container_name:
                      type: keyword
                      index: false
                    docker_id:
                      type: keyword
                      index: false
                    host:
                      type: keyword
                      index: false
                    labels:
                      properties:
                        app:
                          type: keyword
                          index: false
                        application:
                          type: keyword
                          index: false
                        component:
                          type: keyword
                          index: false
                        release_group:
                          type: keyword
                          index: false
                    namespace_name:
                      type: keyword
                      index: false
                    pod_id:
                      type: keyword
                      index: false
                    pod_name:
                      type: keyword
                      index: false
                log:
                  type: text
                  norms: false
      td_agent:
        - metrics_agent:
            header: source
            type: monitor_agent
            bind: 0.0.0.0
            port: 24220
        - fluentbit_forward:
            header: source
            type: forward
            port: "#{ENV['FLUENTD_PORT']}"
            bind: 0.0.0.0
        - oslo_fluentd:
            header: match
            type: elasticsearch
            user: "#{ENV['ELASTICSEARCH_USERNAME']}"
            password: "#{ENV['ELASTICSEARCH_PASSWORD']}"
            expression: "openstack.*"
            include_tag_key: true
            host: "#{ENV['ELASTICSEARCH_HOST']}"
            port: "#{ENV['ELASTICSEARCH_PORT']}"
            logstash_format: true
            logstash_prefix: openstack
            buffer_chunk_limit: 10M
            buffer_queue_limit: 32
            flush_interval: 20s
            max_retry_wait: 300
            disable_retry_limit: ""
            num_threads: 8
            type_name: oslo_openstack_fluentd
        - elasticsearch:
            header: match
            type: elasticsearch
            user: "#{ENV['ELASTICSEARCH_USERNAME']}"
            password: "#{ENV['ELASTICSEARCH_PASSWORD']}"
            expression: "**"
            include_tag_key: true
            host: "#{ENV['ELASTICSEARCH_HOST']}"
            port: "#{ENV['ELASTICSEARCH_PORT']}"
            logstash_format: true
            buffer_chunk_limit: 10M
            buffer_queue_limit: 32
            flush_interval: 20s
            max_retry_wait: 300
            disable_retry_limit: ""
            num_threads: 8
            type_name: docker_fluentd
    monitoring:
      prometheus:
        enabled: True
    pod:
      replicas:
        fluentd: 3
    labels:
      fluentd:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      fluentbit:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      prometheus_fluentd_exporter:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
  source:
    type: local
    location: ${OSH_INFRA_PATH}
    subpath: fluent-logging
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: kibana
data:
  chart_name: kibana
  release: kibana
  namespace: osh-infra
  wait:
    timeout: 1800
    labels:
      release_group: osh-infra-kibana
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-kibana
  values:
    labels:
      kibana:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
  source:
    type: local
    location: ${OSH_INFRA_PATH}
    subpath: kibana
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus
data:
  chart_name: prometheus
  release: prometheus
  namespace: osh-infra
  wait:
    timeout: 1800
    labels:
      release_group: osh-infra-prometheus
  test:
    enabled: true
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-prometheus
        - type: pod
          labels:
            release_group: osh-infra-prometheus
            component: test
  values:
    labels:
      prometheus:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
    pod:
      replicas:
        prometheus: 2
    storage:
      requests:
        storage: 20Gi
  source:
    type: local
    location: ${OSH_INFRA_PATH}
    subpath: prometheus
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-kube-state-metrics
data:
  chart_name: prometheus-kube-state-metrics
  release: prometheus-kube-state-metrics
  namespace: kube-system
  wait:
    timeout: 1800
    labels:
      release_group: osh-infra-prometheus-kube-state-metrics
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-prometheus-kube-state-metrics
  values:
    labels:
      kube_state_metrics:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
  source:
    type: local
    location: ${OSH_INFRA_PATH}
    subpath: prometheus-kube-state-metrics
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-node-exporter
data:
  chart_name: prometheus-node-exporter
  release: prometheus-node-exporter
  namespace: kube-system
  wait:
    timeout: 1800
    labels:
      release_group: osh-infra-prometheus-node-exporter
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-prometheus-node-exporter
  values:
    labels:
      node_exporter:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
  source:
    type: local
    location: ${OSH_INFRA_PATH}
    subpath: prometheus-node-exporter
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-alertmanager
data:
  chart_name: prometheus-alertmanager
  release: prometheus-alertmanager
  namespace: osh-infra
  wait:
    timeout: 1800
    labels:
      release_group: osh-infra-prometheus-alertmanager
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-prometheus-alertmanager
  values:
    labels:
      alertmanager:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
  source:
    type: local
    location: ${OSH_INFRA_PATH}
    subpath: prometheus-alertmanager
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: grafana
data:
  chart_name: grafana
  release: grafana
  namespace: osh-infra
  wait:
    timeout: 1800
    labels:
      release_group: osh-infra-grafana
  test:
    enabled: true
  install:
    no_hooks: False
  upgrade:
    no_hooks: False
    pre:
      delete:
        - type: job
          labels:
            release_group: osh-infra-grafana
        - type: pod
          labels:
            release_group: osh-infra-grafana
            component: test
  values:
    endpoints:
      oslo_db:
        namespace: osh-infra
      oslo_db_session:
        namespace: osh-infra
    labels:
      grafana:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
  source:
    type: local
    location: ${OSH_INFRA_PATH}
    subpath: grafana
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-ingress-controller
data:
  description: "LMA Ingress Controller"
  sequenced: False
  chart_group:
    - osh-infra-ingress-controller
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-ceph-config
data:
  description: "LMA Ceph Config"
  sequenced: True
  chart_group:
    - osh-infra-ceph-config
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-ldap
data:
  description: "LDAP"
  sequenced: True
  chart_group:
    - osh-infra-ldap
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-mariadb
data:
  description: "Mariadb"
  sequenced: True
  chart_group:
    - osh-infra-mariadb
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-logging
data:
  description: 'Logging Infrastructure'
  sequenced: True
  chart_group:
    - elasticsearch
    - fluent-logging
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-monitoring
data:
  description: 'Monitoring Infrastructure'
  sequenced: False
  chart_group:
    - prometheus-alertmanager
    - prometheus-node-exporter
    - prometheus-kube-state-metrics
    - prometheus
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: osh-infra-dashboards
data:
  description: 'Logging and Monitoring Dashboards'
  sequenced: False
  chart_group:
    - grafana
    - kibana
---
schema: armada/Manifest/v1
metadata:
  schema: metadata/Document/v1
  name: armada-manifest
data:
  release_prefix: osh-infra
  chart_groups:
    - osh-infra-ingress-controller
    - osh-infra-ceph-config
    - osh-infra-ldap
    - osh-infra-logging
    - osh-infra-monitoring
    - osh-infra-mariadb
    - osh-infra-dashboards
